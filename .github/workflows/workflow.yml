name: Test workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  build_dir: build

jobs:
  main:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
        build_type: [Debug, Release]
        toolchain: [gcc, llvm, msvc]
        exclude:
          - os: ubuntu-20.04
            toolchain: msvc
          - os: windows-2019
            toolchain: gcc
        include:
          - os: ubuntu-20.04
            shell: bash
            github_env: $GITHUB_ENV
          - os: windows-2019
            shell: pwsh
            github_env: $env:GITHUB_ENV
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOCKEN }}
    - name: Set environment
      run: |
        echo "TOOLCHAIN=${{ matrix.toolchain }}" >> ${{ matrix.github_env}}
        echo "BUILD_DIR=${{ env.build_dir }}" >> ${{ matrix.github_env}}
        echo "PARALLEL=ON" >> ${{ matrix.github_env}}
        echo "LIT=ON" >> ${{ matrix.github_env}}
        echo "CODE_COVERAGE=OFF" >> ${{ matrix.github_env}}
        echo "VALGRIND=OFF" >> ${{ matrix.github_env}}
        echo "BUILD_TYPE=${{ matrix.build_type }}" >> ${{ matrix.github_env}}
        echo "DOCKER_ISOLATION=process" >> ${{ matrix.github_env}}
    - name: Download and start container
      # See https://github.com/rudenkornk/docker_cpp
      # See https://github.com/rudenkornk/docker_cpp_windows
      run: make cpp_contests_container
    - name: Configure
      run: make in_docker TARGET=config
    - name: Build
      run: make in_docker TARGET=build
    - name: Test
      run: make in_docker TARGET=test
    - name: Install
      run: make in_docker TARGET=install

  lint:
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        fail-fast: [false]
        tool: [clang-format, clang-tidy]
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Workaround "unsafe repository" issue
      run: |
        # See also https://github.com/actions/checkout/issues/760
        git config --global --add safe.directory "$PWD"
    - name: Set environment
      run: |
        echo "BUILD_DIR=${{ env.build_dir }}" >> $GITHUB_ENV
        echo "CLANG_FORMAT_OUTPUT=patch" >> $GITHUB_ENV
        echo "CLANG_TIDY_OUTPUT=patch" >> $GITHUB_ENV
    - name: Download and start container
      # See https://github.com/rudenkornk/docker_cpp
      run: make cpp_contests_container
    - name: Run linter
      run: make in_docker TARGET=${{ matrix.tool }}
    - name: Check
      run: |
        if [ -s patch ]; then
          cat patch
          exit 1
        fi
