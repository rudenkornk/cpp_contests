# This makefile only has helper targets, it is not meant to handle dependencies --- this is cmake's job
SHELL := pwsh.exe
.SHELLFLAGS := -Command

TOOLCHAIN ?= msvc
BUILD_DIR ?= build
GENERATOR ?= Visual Studio 17 2022
PARALLEL ?= ON
LIT ?= ON
CODE_COVERAGE ?= OFF
VALGRIND := OFF
BUILD_TYPE ?= Debug

CORES := $(shell (Get-CimInstance -ClassName Win32_ComputerSystem).NumberOfLogicalProcessors)
PARALLEL_OPTION := $(shell if("$(PARALLEL)" -eq "ON"){return "--parallel $(CORES)})
TOOLSET := $(shell \
             if("$(TOOLCHAIN)" -eq "msvc"){return "v143"} \
             elseif("$(TOOLCHAIN)" -eq "llvm"){return "ClangCL"} \
             else{throw "Unknown toolchain!"} \
            )

.PHONY: config
config:
	cmake -S . -B "$(BUILD_DIR)" -G "$(GENERATOR)" -T "$(TOOLSET)" -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DWARNINGS=ON -DPARALLEL_TESTING=$(PARALLEL) -DLIT=$(LIT) -DVALGRIND=$(VALGRIND) -DCODE_COVERAGE=$(CODE_COVERAGE)

.PHONY: build
build:
	cmake --build "$(BUILD_DIR)" --config $(BUILD_TYPE) $(PARALLEL_OPTION)

.PHONY: test
test:
	ctest --build-config $(BUILD_TYPE) --test-dir "$(BUILD_DIR)" $(PARALLEL_OPTION) --verbose

.PHONY: install
install: # not implemented yet

###################### docker support ######################
TARGET ?=
DOCKER_IMAGE_TAG ?= rudenkornk/docker_cpp_windows:0.1.3
DOCKER_IMAGE_TAG := $(DOCKER_IMAGE_TAG)
DOCKER_CONTAINER_NAME ?= $(PROJECT_NAME)_container
DOCKER_CONTAINER_NAME := $(DOCKER_CONTAINER_NAME)
DOCKER_CONTAINER := $(BUILD_DIR)/$(DOCKER_CONTAINER_NAME)
DOCKER_ISOLATION ?= hyperv # process or hyperv

DOCKERD_UP := $(shell try{Set-Variable -Name ErrorActionPreference -Value stop -Scope Private; if((Get-Command docker) -and (Get-Process dockerd)){return $$true}}Catch{return $$false})

DOCKER_CONTAINER_ID := $(shell if($$$(DOCKERD_UP)){return (docker container ls --quiet --all --filter name="^/$(DOCKER_CONTAINER_NAME)$$")})
DOCKER_CONTAINER_STATE := $(shell if($$$(DOCKERD_UP)){return (docker container ls --format "{{.State}}" --all --filter name="^/$(DOCKER_CONTAINER_NAME)$$")})
DOCKER_CONTAINER_RUN_STATUS := $(shell if("$(DOCKER_CONTAINER_STATE)" -ne "running"){return "$(DOCKER_CONTAINER)_not_running"})
.PHONY: $(DOCKER_CONTAINER)_not_running
$(DOCKER_CONTAINER): $(DOCKER_CONTAINER_RUN_STATUS)
ifneq ($(DOCKER_CONTAINER_ID),)
	docker container rename $(DOCKER_CONTAINER_NAME) $(DOCKER_CONTAINER_NAME)_$(DOCKER_CONTAINER_ID)
endif
	docker run --interactive --tty --detach <#\
		#> --env BUILD_DIR="$(BUILD_DIR)" <#\
		#> --env GENERATOR="$(GENERATOR)" <#\
		#> --env BUILD_TYPE="$(BUILD_TYPE)" <#\
		#> --env PARALLEL="$(PARALLEL)" <#\
		#> --env LIT="$(PARALLEL)" <#\
		#> --env CODE_COVERAGE="$(CODE_COVERAGE)" <#\
		#> --env VALGRIND="$(VALGRIND)" <#\
		#> --env TOOLCHAIN="$(TOOLCHAIN)" <#\
		#> --name $(DOCKER_CONTAINER_NAME) <#\
		#> --mount type=bind,source="$$(Get-Location)",target=C:\repo <#\
		#> --isolation=$(DOCKER_ISOLATION) <#\
		#> --memory 8G <#\
		#> $(DOCKER_IMAGE_TAG)
	Start-Sleep -Seconds 1
	New-Item -Force -Name "$@" -ItemType File

.PHONY: $(DOCKER_CONTAINER_NAME)
$(DOCKER_CONTAINER_NAME): $(DOCKER_CONTAINER)

.PHONY: in_docker
in_docker: $(DOCKER_CONTAINER)
	docker exec $(DOCKER_CONTAINER_NAME) pwsh -Command "make $(TARGET)"

